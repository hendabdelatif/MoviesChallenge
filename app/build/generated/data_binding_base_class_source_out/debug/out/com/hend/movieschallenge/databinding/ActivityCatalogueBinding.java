// Generated by view binder compiler. Do not edit!
package com.hend.movieschallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.hend.movieschallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCatalogueBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvHorizontalPopular;

  @NonNull
  public final RecyclerView rvHorizontalReleaseDate;

  @NonNull
  public final RecyclerView rvHorizontalRevenue;

  @NonNull
  public final RecyclerView rvHorizontalVoteAverage;

  @NonNull
  public final TextView titlePopular;

  @NonNull
  public final TextView titleReleaseDate;

  @NonNull
  public final TextView titleRevenue;

  @NonNull
  public final TextView titleVoteAverage;

  private ActivityCatalogueBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout mainLayout, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView rvHorizontalPopular, @NonNull RecyclerView rvHorizontalReleaseDate,
      @NonNull RecyclerView rvHorizontalRevenue, @NonNull RecyclerView rvHorizontalVoteAverage,
      @NonNull TextView titlePopular, @NonNull TextView titleReleaseDate,
      @NonNull TextView titleRevenue, @NonNull TextView titleVoteAverage) {
    this.rootView = rootView;
    this.mainLayout = mainLayout;
    this.progressBar = progressBar;
    this.rvHorizontalPopular = rvHorizontalPopular;
    this.rvHorizontalReleaseDate = rvHorizontalReleaseDate;
    this.rvHorizontalRevenue = rvHorizontalRevenue;
    this.rvHorizontalVoteAverage = rvHorizontalVoteAverage;
    this.titlePopular = titlePopular;
    this.titleReleaseDate = titleReleaseDate;
    this.titleRevenue = titleRevenue;
    this.titleVoteAverage = titleVoteAverage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCatalogueBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCatalogueBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_catalogue, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCatalogueBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.main_layout;
      ConstraintLayout mainLayout = rootView.findViewById(id);
      if (mainLayout == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rv_horizontal_popular;
      RecyclerView rvHorizontalPopular = rootView.findViewById(id);
      if (rvHorizontalPopular == null) {
        break missingId;
      }

      id = R.id.rv_horizontal_release_date;
      RecyclerView rvHorizontalReleaseDate = rootView.findViewById(id);
      if (rvHorizontalReleaseDate == null) {
        break missingId;
      }

      id = R.id.rv_horizontal_revenue;
      RecyclerView rvHorizontalRevenue = rootView.findViewById(id);
      if (rvHorizontalRevenue == null) {
        break missingId;
      }

      id = R.id.rv_horizontal_vote_average;
      RecyclerView rvHorizontalVoteAverage = rootView.findViewById(id);
      if (rvHorizontalVoteAverage == null) {
        break missingId;
      }

      id = R.id.title_popular;
      TextView titlePopular = rootView.findViewById(id);
      if (titlePopular == null) {
        break missingId;
      }

      id = R.id.title_release_date;
      TextView titleReleaseDate = rootView.findViewById(id);
      if (titleReleaseDate == null) {
        break missingId;
      }

      id = R.id.title_revenue;
      TextView titleRevenue = rootView.findViewById(id);
      if (titleRevenue == null) {
        break missingId;
      }

      id = R.id.title_vote_average;
      TextView titleVoteAverage = rootView.findViewById(id);
      if (titleVoteAverage == null) {
        break missingId;
      }

      return new ActivityCatalogueBinding((ConstraintLayout) rootView, mainLayout, progressBar,
          rvHorizontalPopular, rvHorizontalReleaseDate, rvHorizontalRevenue,
          rvHorizontalVoteAverage, titlePopular, titleReleaseDate, titleRevenue, titleVoteAverage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
